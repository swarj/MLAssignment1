# -*- coding: utf-8 -*-
"""pls_work.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q8rnZt05-HhRp4NGyjQ7_JEY5ijj4Fv_
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation

url = "https://raw.githubusercontent.com/swarj/MLAssignment1/main/Concrete_Data_Subset.xlsx%20-%20Sheet1-2.csv"
df = pd.read_csv(url)
x1 = df['Cement (component 1)(kg in a m^3 mixture)']
x2 = df['Blast Furnace Slag (component 2)(kg in a m^3 mixture)']
x3 = df['Water (component 4)(kg in a m^3 mixture)']
x4 = df['Superplasticizer (component 5)(kg in a m^3 mixture)']
y = df['Concrete compressive strength(MPa, megapascals)']

x1 = (x1 - x1.mean()) / x1.std()
x2 = (x2 - x2.mean()) / x2.std()
x3 = (x3 - x3.mean()) / x3.std()
x4 = (x4 - x4.mean()) / x4.std()

x = np.c_[x1,x2,x3,x4, np.ones(x1.shape[0])]

#Gradient Desc Code
learning_rate = 0.01 #step size
epochs = 2000 #iterations
N = y.size # number of exmaples in the dataset
np.random.seed(123) #random starter values for slopers
coeff = np.random.rand(5) # 4 params + 1s
print("Initial values of coefficients: ", coeff)


#Algorithm
def grad_desc(x,y,coeff, epochs, learning_rate):
    past_costs = []
    past_coeff = [coeff]
    for i in range(epochs):
      prediction = np.dot(x, coeff)
      error = prediction - y
      cost = 1/(2*N) * np.dot(error.T, error)
      past_costs.append(cost)
      der = (1/N) * learning_rate * np.dot(x.T, error)
      coeff = coeff - der
      past_coeff.append(coeff)
    return past_coeff, past_costs

past_coeff, past_costs = grad_desc(x,y,coeff,epochs, learning_rate)
coeff = past_coeff[-1]
cost = past_costs[-1]
print("Final Coefficients: ",coeff)
print("Final Cost: ", cost )

#Cost Function
plt.title('Cost Function')
plt.xlabel('Number of Iterations')
plt.ylabel('Cost')
plt.plot(past_costs)
plt.show()